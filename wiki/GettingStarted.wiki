#labels Featured
# Getting started.

= Introduction =

This page describes how to get started using Antilia Wicket components and building your own Antila powered OSGi-wicket applications.

= Details =

For the time being we just describe how to get the couple of demo application we provide. Our demo applications, as Antilia itself, are build as (equinox) OSGI application. So, you will need to use Eclipse as IDE if you want to be able to run the demos as they are now. NOTE: this doesn't imply that some of the component we provide cannot be used in non-OSGi WEB applications.

We provide two demo applications:

== Antilia's components demo ==

This applications is a small show-case of some of the the widgets we have built.

 * Table component: with re-sizable/draggable columns columns. A plug-in is available that  (automatically) adds export funtionality to tables (so, far PDF is the only supported format, but excel and CSV will follow soon). This is provided in a non-intrusive way via the plugin *com.antilia.export*  
 * Floating panels: modal and non-modal.
 * Round pane boxes
  
  
In order to get the first demo application working you have to check-out the following bundles into a workspace:
 * com.antilia.common
 * com.antilia.hibernate
 * com.antilia.web
 * com.antilia.demo
 * com.antilia.export (optional)

The last one is the main application bundle. If you open the Debugs dialog configuration  and you go to the section OSGi Framework, you will find the *demo34* launcher. You can use it to start the application. Then browse to http:localhost:8080/demo to see the application working.

==A demo showing how to use Antilia to build Data-base oriented applications==

This application shows Antilia's Data-oriented components: so, far this mean a CRUD component that is capable to generate a complex CRUD panel out of JPA annotated bean and some (optinal) additional information...

In order to get the second application working, you will need to: 

 * Check out the projects:
   # com.antilia.common
   # com.antilia.web
   # com.antilia.hibernate
   # com.antilia.web.hibernate
   # com.antilia.demo.manager
   # com.antilia.export (optional)
 * Have a POSGRES server installed somewhere and run the creation script manager_postgre.sql for at com.antilia.demo.manager/sql folder. The application could be easily adapted to runs with other data-base engines but we haven't had the time for that yet.
 * If you open the Debugs dialog configuration  and you go to the section OSGi Framework, you will find the *manager34* launcher. You can use it to start the application. Then browse to http:localhost:8080/manager to see the application working.
  
    
  